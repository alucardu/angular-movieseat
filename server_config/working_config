upstream movieseat_upstream_ssr_config {
    server 127.0.0.1:4000;
}

upstream movieseat_upstream_graphql_config {
    server 127.0.0.1:4100;
}

server {
  listen 443 ssl http2;
  ssl_certificate /etc/letsencrypt/live/moviese.at/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/moviese.at/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
  server_name www.moviese.at;
  root /root/angular-movieseat/dist/angular-movieseat/browser;

  location / {
    try_files $uri $uri @ssr;
  }

  location @ssr {
    proxy_pass http://movieseat_upstream_ssr_config;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_http_version 1.1;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /graphql {
    set $cors_origin "";

    if ($http_origin ~* (https://www.moviese.at|http://localhost)) {
      set $cors_origin $http_origin;
    }

    if ($cors_origin = "") {
        return 403;
    }

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' "$cors_origin";
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
      add_header 'Access-Control-Allow-Credentials' 'true';
      return 204;
    }

    proxy_pass http://movieseat_upstream_graphql_config;  # Proxy to your GraphQL server
  }
}

server {
  listen 80;
  server_name www.moviese.at;
  return 301 https://$server_name$request_uri?;
}
